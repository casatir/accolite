#!/usr/bin/env python

import sys
import os
import posixpath
import subprocess
import string
import accolite

# The usage function
def usage(ostream):
    ostream.write("Usage: accolite [Options] <command> [<args>]\n\n")
    ostream.write("Options:\n")
    ostream.write("--help, -h             : \t This help message.\n")
    ostream.write("Possible accolite commands are:\n")
    ostream.write("bash-completion\tPrint a tutorial for how to activate bash-completion for accolite\n")
    ostream.write("clean\t\tClean the working project\n")
    ostream.write("cmds\t\tPrint available accolite commands\n")
    ostream.write("compile\t\tCompile the working project\n")
    ostream.write("init\t\tInitialize a new working project\n")
    ostream.write("install-dir\tPrint absolute path to the installation dir of accolite\n")
    ostream.write("root\t\tPrint absolute path to the working accolite directory\n")
    ostream.write("test\t\tRun tests on the working project\n")
    ostream.write("update\t\tUpdate the working project version of accolite\n")


def main():
    # Get options
    argv = sys.argv[1:]
    while len(argv) > 0 and argv[0].startswith("-"):
        if argv[0] in ["--help","-h"]:
            usage(sys.stdout)
            return 0
        else:
            usage(sys.stderr)
            return 1
        # Shift argument
        argv = argv[1:]

    # Check if accolite is called on a command
    if len(argv) == 0:
        usage(sys.stderr)
        return 1

    # Get the command
    command = argv[0]
    accoliteCommands = accolite.availableCommands()
    # Check if the command is valide
    if command not in accoliteCommands:
        sys.stderr.write("accolite: '" + command + "' is not a valid accolite command. See accolite --help.\n")
        sys.stderr.write("Did you mean '" + accolite.levenshteinBestMatch(command, accoliteCommands) + "'?\n")
        return 2

    # Call the corresponding command
    argv[0] = accolite.scriptOfCommand(argv[0])
    return subprocess.call(argv)


if __name__ == '__main__':
    sys.exit(main())
