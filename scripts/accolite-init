#!/usr/bin/env python

import sys
import os
import accolite

# Usage function
def usage(stream):
    stream.write("Usage: accolite-init [Options] <working dir>\n")
    stream.write("Options:\n")
    stream.write("--help, -h                  : \t This help message.\n")
    stream.write("--config-file, -c <xml file>: \t Give a configuration file for initialize the project.\n")

if __name__ == '__main__':
    # Preset options
    configfile = ""
    # Get options
    argv = sys.argv[1:]
    while len(argv) > 0 and argv[0].startswith("-"):
        if argv[0] in ["--help","-h"]:
            usage(sys.stdout)
            exit(0)
        elif argv[0] in ["--config-file","-c"]:
            argv = argv[1:]
            configfile = argv[0]
        else:
            sys.stderr.write("Unknown option " + argv[0] + "!")
            usage(sys.stderr)
            exit(1)
        # Shift argument
        argv = argv[1:]

    if len(argv) == 0:
        sys.stderr.write("Mandatory argument <working dir> not found.\n")
        usage(sys.stderr)
        exit(1)

    # Set dirs
    rootdir = argv[0]
    accolitedir = os.path.abspath(os.path.join(rootdir, ".accolite"))
    os.makedirs(accolitedir)
    # Put the config file inside .accolite
    if configfile == "":
        configxml = accolite.defaultxml(os.path.basename(accolitedir))
    else:
        configxml = parse(configfile)
    configxmlfile = open(os.path.abspath(os.path.join(accolitedir, "config.xml")), 'w')
    configxml.writexml(configxmlfile)
    configxmlfile.close()

    # Go inside working dir
    os.chdir(rootdir)

    # Creates dirs
    os.makedirs(accolite.abscmakedir())
    os.makedirs(accolite.abssrcdir())
    os.makedirs(accolite.abstestsdir())
    os.makedirs(accolite.absexamplesdir())
    os.makedirs(accolite.absdocdir())
    
